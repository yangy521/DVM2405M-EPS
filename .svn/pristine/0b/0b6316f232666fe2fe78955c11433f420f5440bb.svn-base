/*******************************************************************************
* Filename: KSDsys.h 	                                         		   *
*                                                                              *
* Description: 系统定义		           				       *
* Author:                                                                      *
* Date:     														           *
* Revision:															           *
*																	           *
*******************************************************************************/
#ifndef _KSDSYS_H_
#define _KSDSYS_H_
#include	"IQmathLib.h"

/* 1. data type definitions */
typedef unsigned char		INT8U;       		/* Unsigned 16 bits quantity  */
typedef signed   char		INT8S;       		/* Signed   16 bits quantity  */
typedef unsigned short int	INT16U;       		/* Unsigned 16 bits quantity  */
typedef signed   short int  INT16S;       		/* Signed   16 bits quantity  */
typedef unsigned int		INT32U;       		/* Unsigned 32 bits quantity  */
typedef signed   int		INT32S;       		/* Signed   32 bits quantity  */
typedef unsigned long 	INT64U;				/* Unsigned 64 bits quantity  */
typedef signed   long 	INT64S;				/* Signed   64 bits quantity  */
typedef volatile INT8U		VINT8U;      		/* Unsigned volatile  8 bits  */
typedef volatile INT8S		VINT8S;      		/* Signed   volatile  8 bits  */
typedef volatile INT16U		VINT16U;      		/* Unsigned volatile 16 bits  */
typedef volatile INT16S		VINT16S;      		/* Signed   volatile 16 bits  */
typedef volatile INT32U		VINT32U;       		/* Unsigned volatile 32 bits  */
typedef volatile INT32S		VINT32S;       		/* Signed   volatile 32 bits  */
typedef volatile INT64U		VINT64U;      		/* Unsigned volatile 64 bits  */
typedef volatile INT64S		VINT64S;      		/* Signed   volatile 64 bits  */
typedef unsigned char tBoolean;
typedef signed char CHAR;

typedef INT32S  s32;
typedef INT16S s16;
typedef INT8S  s8;
typedef INT32U  u32;
typedef INT16U u16;
typedef INT8U  u8;

#define PH3_TO_PH2   				1.5

#define _IQ_ARITHMETIC_OPENLOOP         1
#define _IQ_ARITHMETIC_CLOSELOOP        2
#define _IQ_ARITHMETIC_OPENLOOP_CURLIMIT 3

#define _CURRENT_SAMPLE_3RES_LOW   1

///* VOLTAGE_LEVEL */
#define _VOLTAGE_24V		1		//24V
#define _VOLTAGE_36V		2		//36V
#define _VOLTAGE_48V		3		//48V
#define _VOLTAGE_72V		4		//72V
#define _VOLTAGE_80V		5		//80V
#define _VOLTAGE_88V		6		//88V

/* 2. Macro symbol definitions */
#define NULL				0
#define TRUE				((INT16S)1)
#define FALSE				((INT16S)0)
#define true				TRUE
#define false				FALSE

/* 3. **************************/
/* CAN波特率定义 */
#define CAN_500KBPS			1
#define CAN_250KBPS			2
#define CAN_125KBPS			3
#define CAN_62P5KBPS		4

#define CAN_BAUDRATE_PARA_ENABLE

/* 用户类型定义 */
#define USER_QT_STD				1  //前拓标准程序
#define USER_STD_SGS			2 	//SGS认证   G473
#define	USER_NBRY_STEER_G4		3	//宁波如意转向（双冗余）
#define USER_ZHONGLI_STEER_G4	4	//中力转向
#define USER_HANGCHA_DDTBC_STEER	5	//杭叉 乘驾搬运车 

/* 控制板类型定义 */
#define _1220_G4   		1  	//双冗余电转向 G473芯片 V0.3
#define _4805M_G4_V04   2   //双冗余电转向 G473芯片 V0.4 (优化5V电流检测电路)


/* 编码器类型定义 */
#define ENCODER_ABZ			 1  	//AB相增量编码器
#define ENCODER_CLKDIR	 2    //脉冲/方向模式

/* 小时计类型 */
#define HOURCOUNT_DISABLE									1
#define HOURCOUNT_ENABLE									2

/***以下为参数文件定义 防止报错，无实际意义***/
#define PRODUCT_TYPE  Prd_Steer

/***UART TYPE DEFINE*****/
#define UART_LOGIC_MASTER   1    //主站
#define UART_LOGIC_SLAVE		2    //从站

/***Steer Control Signal Input Type*****/
#define PULSE_INPUT    1   //脉冲信号输入
#define ANALOG_INPUT	 2   //电位计模拟信号输入

/******************************************************************************
*用户类型宏编译开关
******************************************************************************/
#define USER_TYPE			USER_HANGCHA_DDTBC_STEER	//用户类型定义

#if (USER_TYPE == USER_QT_STD)
	#define CTLBOARD_TYPE		_4805M_G4_V04	
	#define RATE_VOLTAGE 		_VOLTAGE_48V	//_VOLTAGE_48V
	#define MAX_CURRENTLIMIT  50000  //50A

	#define CAN_BAND_RATE		CAN_500KBPS	//CAN_125KBPS//
	#define LOGIC_TYPE 			Prd_Move// Prd_Move// Prd_Steer//
	#define ENCODER_TYPE 		ENCODER_ABZ 
	#define HOMESW_POINT   //点域回中
	#define AUTOTUNE_WIP	//电位计自匹配
//	#define REDUNDANT_HOME_SWI_FUNC		
	#define FAULT_FUNC_ENABLE  //公司测试屏蔽
	#define MOTOR_OPEN_CHECK_EN
//	#define _DEBUG_MODE
	
	/* 版本管理定义 */
	#define SOFTVERSION 	0x101
	#define SOFT_YEAR  		0x2025
	#define SOFT_MONTHDAY 	0x0213
#endif

#if (USER_TYPE == USER_STD_SGS)
	#define CTLBOARD_TYPE		_1220_G4
	#define MAX_CURRENTLIMIT  50000  //50A
	#define CAN_BAND_RATE		CAN_500KBPS	//CAN_125KBPS//
	#define LOGIC_TYPE 		Prd_Move// Prd_Move// Prd_Steer//
	#define ENCODER_TYPE 	 ENCODER_ABZ 
	#define HOMESW_POINT   //点域回中
	#define AUTOTUNE_WIP	//电位计自匹配
	
	/* 版本管理定义 */
	#define SOFTVERSION 	0x101
	#define SOFT_YEAR  		0x2023
	#define SOFT_MONTHDAY 0x0821
#endif

#if (USER_TYPE == USER_NBRY_STEER_G4)
	#define CTLBOARD_TYPE		_1220_G4	
	#define RATE_VOLTAGE 		_VOLTAGE_24V
	#define MAX_CURRENTLIMIT  50000  //50A

	#define CAN_BAND_RATE		CAN_250KBPS	//CAN_125KBPS//
	#define LOGIC_TYPE 		Prd_Steer// Prd_Move// Prd_Steer//
	#define ENCODER_TYPE 	 ENCODER_ABZ 
	#define HOMESW_POINT   //点域回中
	#define AUTOTUNE_WIP	//电位计自匹配
	//#define ENCODER_OPEN_CURRENT_MIN     (24) //电位计16mA+编码器20mA  24.2.27改为参数可设阈值
	//#define MICRO_CANOPEN
	
	/* 版本管理定义 */
	#define SOFTVERSION 	0x101
	#define SOFT_YEAR  		0x2023
	#define SOFT_MONTHDAY 	0x0821
#endif

#if (USER_TYPE == USER_ZHONGLI_STEER_G4)
//#define USER_ESR161_DGC_IO_TYPE     //RS161堆高车
#define USER_RSC202_PHZDGC_IO_TYPE    //RSC202平衡重式堆高车

#ifdef USER_ESR161_DGC_IO_TYPE
	#define RATE_VOLTAGE 	 _VOLTAGE_48V
    #define MASK_REDUNDANT_MOTOR_ENC_ERR    //单路电机编码器使能宏  屏蔽从mcu冗余编码器故障

#endif

#ifdef USER_RSC202_PHZDGC_IO_TYPE
	#define RATE_VOLTAGE 	 _VOLTAGE_24V

#endif
	#define CTLBOARD_TYPE		_1220_G4	
	#define MAX_CURRENTLIMIT  50000  //50A

	#define CAN_BAND_RATE		CAN_125KBPS		//CAN_125KBPS
	#define LOGIC_TYPE 		Prd_Steer// Prd_Move// Prd_Steer//
	#define ENCODER_TYPE 	 ENCODER_ABZ 
	#define HOMESW_POINT   //点域回中
	#define AUTOTUNE_WIP	//电位计自匹配
	#define THROTTLE_ZERO_LOCK	//无操作60秒关闭输出	
	//#define ENCODER_OPEN_CURRENT_MIN     (24) //电位计16mA+编码器20mA  24.2.27改为参数可设阈值
	//#define MICRO_CANOPEN
	
	/* 版本管理定义 */
	#define SOFTVERSION 	0x101
	#define SOFT_YEAR  		0x2025
	#define SOFT_MONTHDAY 	0x0219
#endif

//***杭叉 乘驾搬运车
#if (USER_TYPE == USER_HANGCHA_DDTBC_STEER)
	#define CTLBOARD_TYPE		_4805M_G4_V04	//_1220_G4  _4805M_G4_V04
	#define RATE_VOLTAGE 		_VOLTAGE_24V
	#define MAX_CURRENTLIMIT  50000  //50A

	#define CAN_BAND_RATE		CAN_125KBPS		//CAN_125KBPS
	#define LOGIC_TYPE 		Prd_Steer// Prd_Move// Prd_Steer//
	#define ENCODER_TYPE 	 ENCODER_ABZ 
	#define HOMESW_POINT   //点域回中
	#define AUTOTUNE_WIP	//电位计自匹配
	#define THROTTLE_ZERO_LOCK	//无操作60秒关闭输出	
	#define REDUNDANT_HOME_SWI_FUNC		
	#define FAULT_FUNC_ENABLE  //公司测试屏蔽
	#define ERRCODE_LOOP_SEND	
	#define HANGCHAPP_ENABLE
	//#define MICRO_CANOPEN
	
	/* 版本管理定义 */
	#define SOFTVERSION 	0x102
	
	#define SOFT_YEAR  		0x2025
	#define SOFT_MONTHDAY 	0x0224
#endif


#if(CTLBOARD_TYPE == _1220_G4 )
#define ANALOG_ADC_CONV_RATIO 		0.5 //0.547 /* 49.9/(49.9+41.2)*/
#define ENCODER_ADC_CONV_RATIO		0.09
#define ENCODER_OPEN_VOLTAGE   1200
#define MOTOR_OPEN_VOLTAGE		1200

#define ESP_OVER_CUREENT			(RATE_2M_CURRENT*1.8)		/* 驱动器必须急停保护的电流 , A*/									
#define STD_CURRENT					489.0				/* 1226C 电流回路 1= 489.0A */
	
#define IQ_ARITHMETIC_TYPE	_IQ_ARITHMETIC_OPENLOOP_CURLIMIT
#define MOTOR_SPEED_LEVEL	 _MOTOR_SPEED_LEVEL300
#define	USART_BAUDRATE	 115200
#define UART_LOGIC_TYPE   UART_LOGIC_MASTER
#define CURRENT_SAMPLE_MODE _CURRENT_SAMPLE_3RES_LOW

#define RATE_1H_CURRENT				40				/* 1小时工作制电流  unit A */
#define RATE_2M_CURRENT				90				/* 2分钟工作制电流   unit A */

//差异配置项
#define	ENCODER_OPEN_CURRENT_CHK
#define	OUT5V_STD_CURRENT			(150) /*1mA对应22mV, 5V输出电流检测标幺值 150mA */
#define AI_5V_12V_OUT1_I_FACTOR              (3300.0 / (4096 * 22) ) //R:1Ω current value

//硬件版本
#define HARDVERSION1  0x103   /***硬件版本 ***/
#define HARDVERSION2  0x100	  /***结构版本 ***/
#endif //

#if(CTLBOARD_TYPE == _4805M_G4_V04 )
#undef CTLBOARD_TYPE
#define CTLBOARD_TYPE  _1220_G4

#define ANALOG_ADC_CONV_RATIO 		0.5 //0.547 /* 49.9/(49.9+41.2)*/
#define ENCODER_ADC_CONV_RATIO		0.09
#define ENCODER_OPEN_VOLTAGE   1200
#define MOTOR_OPEN_VOLTAGE		1200

#define ESP_OVER_CUREENT			(RATE_2M_CURRENT*1.8)		/* 驱动器必须急停保护的电流 , A*/									
#define STD_CURRENT					489.0				/* 1226C 电流回路 1= 489.0A */
	
#define IQ_ARITHMETIC_TYPE	_IQ_ARITHMETIC_OPENLOOP_CURLIMIT
#define MOTOR_SPEED_LEVEL	 _MOTOR_SPEED_LEVEL300
#define	USART_BAUDRATE	 115200
#define UART_LOGIC_TYPE   UART_LOGIC_MASTER
#define CURRENT_SAMPLE_MODE _CURRENT_SAMPLE_3RES_LOW

#define RATE_1H_CURRENT				40				/* 1小时工作制电流  unit A */
#define RATE_2M_CURRENT				90				/* 2分钟工作制电流   unit A */

//差异配置项
#define ENCODER_OPEN_CURRENT_CHK_THRESHOLD
#define	OUT5V_STD_CURRENT			(150) /*1mA对应22mV, 5V输出电流检测标幺值 150mA */
#define	OUT5V_MAX_CURRENT			(100) /*1mA对应22mV, 5V输出电流检测标幺值 150mA */

//硬件版本
#define HARDVERSION1  0x104   /***硬件版本 ***/
#define HARDVERSION2  0x100	  /***结构版本 ***/

#endif //#if(CTLBOARD_TYPE == _4805M_G4_V04 )

#if (RATE_VOLTAGE == _VOLTAGE_24V)
#define OVERVOLTAGE_THRESHOLD_V   32  //Volt on DC Bus 
#define UNDERVOLTAGE_THRESHOLD_V  16  //Volt on DC Bus
#define VOLTAGELIMIT_THRESHOLD_V  (OVERVOLTAGE_THRESHOLD_V-2)  //Bus Volt limit 
#define RELAYON_THRESHOLD_V  			16  //Volt on DC Bus 
#define BUS_ADC_CONV_RATIO 			  0.045 /* 6.8/(6.8+143)DC bus voltage partitioning ratio*/
#define POWER5V_THRESHOLD_V				4
#define POWER5V_CONV_RATIO 			  0.5 /*100/(100+100)*/
#define ANALOG_ADC_CONV_RATIO 		0.5 //0.547 /* 100/(100+100)*/

#endif

#if (RATE_VOLTAGE == _VOLTAGE_48V)
#define OVERVOLTAGE_THRESHOLD_V   56  //Volt on DC Bus 
#define UNDERVOLTAGE_THRESHOLD_V  36  //Volt on DC Bus
#define VOLTAGELIMIT_THRESHOLD_V  60  //Bus Volt limit 
#define RELAYON_THRESHOLD_V  			36  //Volt on DC Bus 
#define BUS_ADC_CONV_RATIO 			  0.045 /* 6.8/(6.8+143)DC bus voltage partitioning ratio*/
#define POWER5V_THRESHOLD_V				4
#define POWER5V_CONV_RATIO 			  0.5 /*23.7/(41.2+23.7)*/
#define ANALOG_ADC_CONV_RATIO 		0.5 //0.547 /* 49.9/(49.9+41.2)*/
#endif

/*******************************************************************************
* 常量定义
*******************************************************************************/
#define MOTOR_NUM							1
#define	RIGID_NUM							13
#define	SIGNAL_LAMP_NUM				10
#define SYS_TIMER_NUM					6

#define MAX_VOLTAGE 		63
#define BRKLIMIT_VOLTAGE 		32
#define CUT_VOLTAGE 		41.8
#define MIN_VOLTAGE 		33.6
#define BRO_VOLTAGE 		28.8
#define ESP_LOW_VOLTAGE 		24

/* 常量 */
#define PI									3.141592653589793		/* PI */
#define SEC_MIN							60.0								/* 60s = 1min */
#define SQRT2								1.4142135623731			/* sqrt(2) */
#define SQRT3								1.7320508075689			/* sqrt(3) */
#define SYSTEM_FREQUENCY		120									/* 120M */
#define FS									16000.0							/* 8K采样频率 */
#define TS									1.0/FS							/* 8K采样周期 */
#define C_1_MS							FS/1000							/* 1ms 	  =	125us x	8	 */
#define	MULT_256S						1										//范围：1~127.过流1倍额定电流时,允许的时间,1 代表 256秒

/* 标幺值 */
#define STD_WC							256.0								/* 截止频率1 = 256 Hz */
#define STD_SPEEDRPM				256.0								/* 转速1 = 256 RPM */
#define STD_SPEED						2*PI*STD_SPEEDRPM/SEC_MIN	
																								/* 转速1 = 26.8083 rad/s */
#define STD_FRQ						  (STD_SPEEDRPM/SEC_MIN)

#define STD_SPEEDACC				4096.0			/* 加速度1 = 4096 rad/s^2 */
//#define STD_CURRENT				25.00				/* 标准15mohm, 电流1 = 25.00 A*/
//#define STD_CURRENT					37.50				/* 标准15mohm, 电流1 = 37.50 A*/
//#define STD_CURRENT					845.0				/* 1220 电流回路 1= 845A */
//#define STD_VOLTAGE				311.0				/* 电压1 = 311 V */
#define STD_VOLTAGE					537.3				/* 电压1 = 537.3 V */
#define STD_VOLTAGE_BUS			2101.3				/* 电压1 = 537.3 V kff*/
#define STD_INERTIA					1.0/256.0			/* 惯量1 = 3.9*10^-3 Kgm^2 */
#define STD_TORQUE_K				1.0				/* 转矩系数1 = 1 Nm/A */
#define STD_RESIST					1.0				/* DQ相电阻1 = 1 Ohm */
#define STD_T								1.0				/* time, 1 = 1 s */
#define STD_ABS17						131072.0
#define STD_INC2500					10000.0
#define STD_INC48					192.00

#define	DO_PWM_TIM_CLK			200000
#define	DO_PWM_TIM_PERIOD		1000

/* 编码器类型 */
#define	INC_ENCODER_2500						1

/* 运行模式 */
#define POS_RUN_MODE								0
#define SPEED_RUN_MODE							1
#define PANEL_INPUT_RUN_MODE				2
#define TORQUE_RUN_MODE							3

/* FSM 状态 */
#define	FSMSTATE_INACTIVE						0
#define	FSMSTATE_TO_BRKOFF					1
#define	FSMSTATE_ACTIVE							2
#define	FSMSTATE_PREPARE						3
#define	FSMSTATE_TO_PWMOFF					4

/* Tune FSM state definitions */
#define TUNE_IDLE								0x00
#define TUNE_INERTIA						0x01
#define TUNE_CALIBZ							0x02

/* Tune inertia FSM state */
#define TUNE_INERTIA_IDLE					0x10
#define TUNE_INERTIA_START					0x11
#define TUNE_INERTIA_Z						0x12
#define TUNE_INERTIA_Z_DONE					0x13
#define TUNE_INERTIA_STOP1					0x14
#define TUNE_INERTIA_POSACC1				0x15
#define TUNE_INERTIA_POSDEC1				0x16
#define TUNE_INERTIA_NEGACC1				0x17
#define TUNE_INERTIA_NEGDEC1				0x18
#define TUNE_INERTIA_STOP2					0x19
#define TUNE_INERTIA_POSACC2				0x1A
#define TUNE_INERTIA_POSDEC2				0x1B
#define TUNE_INERTIA_NEGACC2				0x1C
#define TUNE_INERTIA_NEGDEC2				0x1D
#define TUNE_INERTIA_DONE					0x1E

/* Tune calib z FSM state */
#define TUNE_CALIBZ_IDLE					0x20
#define TUNE_CALIBZ_START					0x21

/* FFT */
#define FFT_N											1024
#define FFT_SAMPLE_INTERVAL					2
#define FFT_SAMPLE_FREQ					(FS/FFT_SAMPLE_INTERVAL)
#define FFT_RESOLVING						(FFT_SAMPLE_FREQ/FFT_N)

/* Vibration */
#define VIBRATION_DETECT_IDLE				0x00
#define VIBRATION_DETECT_SAMPLE			0x01
#define VIBRATION_DETECT_CALC				0x02
#define VIBRATION_DETECT_DONE				0x03

/* background loop timer period */
#define C_1_MS_TIMER_PERIOD					(1*C_1_MS)		/* 1ms 	  =	125us x	8	 */
#define C_4_MS_TIMER_PERIOD					(4*C_1_MS)		/* 4ms 	  =	125us x	32	 */
#define C_10_MS_TIMER_PERIOD				(10*C_1_MS)		/* 10ms	  =	125us x	80	 */
#define C_120_MS_TIMER_PERIOD				(120*C_1_MS)	/* 120ms  =	125us x	960	 */
#define C_150_MS_TIMER_PERIOD				(150*C_1_MS)	/* 150ms  =	125us x	1200 */
#define C_1000_MS_TIMER_PERIOD			(1000*C_1_MS)	/* 1000ms =	125us x	8000 */
#define C_500_MS_TIMER_PERIOD				(500*C_1_MS)	/* 500ms =	125us x	4000 */

///*******************************************************************************
//* 1. KERNEL(PLC<->KERNEL)
//*******************************************************************************/
///* KERNEL <- PLC */ 
#define 		SL_TER_RDY							0x0000U	//母线电压正常
#define 		SL_TER_SRVON						0x0001U //控制器启动指令
//#define 		SL_TER_PROP						0x0002U //比例阀使能指令
#define 		SL_TER_CURRENT_CUT			0x0003U //控制器电流消减指令
//#define 		SL_TER_BAT_ERROR						0x0004U //电池电量亏欠
//#define 		SL_TER_BAT_PROTECTALM			0x0005U //电池电量低于10%
//#define 		SL_TER_BAT_LOWALM					0x0006U //电池电量低于20%
//#define 		SL_TER_THROTTLE_ZERO				0x0007U //踏板0输入
//										/*	0x0008U	*/
//										/*	0x0009U */
//										/*	0x000AU */
//										/*	0x000BU	*/
//										/*	0x000CU */	
//										/*	0x000DU */	
//										/*	0x000EU */	
//										/*	0x000FU */

///* KERNEL -> PLC */
//#define 		SL_TER_EN_PWM						0x0100U
//										/*	0x0101U */	
//										/*	0x0102U */	
//										/*	0x0103U */	
//										/*	0x0104U */	
//										/*	0x0105U */	
//										/*	0x0106U */	
//#define			SL_ESP_VOLTAGE_ERR			  0x0107U
#define 		SL_OVER_CURRENT_ERR				0x0108U 
//#define 		SL_2MOVER_CURRENT_ERR			0x0109U 
//#define 		SL_FXP_ERROR							0x010AU
//										/*	0x010BU */
//										/*	0x010CU */
//										/*	0x010DU */
//										/*	0x010EU */
//										/*	0x010FU */
//										
#define 		SL_TER_CWLI							0x0101U //当SL_TER_CWLI输入为0时，禁止正转
#define			SL_TER_CCWLI						0x0102U //当SL_TER_CCWLI输入为0时，禁止反转
////#define 		SL_TER_ACLR							0x0105U

///*******************************************************************************
//* 2. PLC(PLC<->KERNEL)
//*******************************************************************************/
///* PLC <- KERNEL */
#define 		PLC_TER_EN_PWM						0x0200U
//										/*	0x0201U */
//										/*	0x0202U */
//										/*	0x0203U */
//										/*	0x0204U */
//										/*	0x0205U */
//										/*	0x0206U */
//										/*	0x0207U */
//#define 		PLC_OVER_CURRENT_ERR			0x0208U 
//										/*	0x0209U */
//#define 		PLC_FXP_ERROR							0x020AU
//										/*	0x020BU */
//										/*	0x020CU */
//										/*	0x020DU */
//										/*	0x020EU */
//										/*	0x020FU */
////#define 		SL_TER_EN_BRAKE					0x0207U

///* PLC -> KERNEL */
//#define 		PLC_TER_RDY							0x0300U	//功率板电源正常
//#define 		PLC_TER_SRVON						0x0301U //控制器启动指令
//#define 		PLC_TER_PROP						0x0302U //比例阀使能指令
//#define 		PLC_TER_CURRENT_CUT			0x0303U //控制器电流消减指令
//#define 		PLC_BAT_ERROR						0x0304U //电池电量亏欠
//#define 		PLC_BAT_PROTECTALM			0x0305U //电池电量低于10%
//#define 		PLC_BAT_LOWALM					0x0306U //电池电量低于20%
#define 		PLC_THROTTLE_ZERO				0x0307U //踏板0输入
//#define 		PLC_THROTTLE_OVER_ERR		0x0308U //Throttle over voltage
//#define 		PLC_BRAKE_OVER_ERR			0x0309U //Brake over voltage
//										/*	0x030AU */
//										/*	0x030BU */
//										/*	0x030CU */
//										/*	0x030DU */
//										/*	0x030EU */
//										/*	0x030FU */
//  
///*******************************************************************************
//* 2. PLC 
//*******************************************************************************/
//#define			PLC_KSI_RDY								0x0400U /*	*/
//#define			PLC_VBUS_RDY							0x0401U /*	*/
//#define			PLC_C8051F_RDY						0x0402U /*	*/
//#define			PLC_DRIVE1_CONNECT				0x0403U 
//#define			PLC_DRIVE2_CONNECT				0x0404U /*	*/
//#define			PLC_DRIVE3_CONNECT				0x0405U /*	*/
//#define			PLC_DRIVE4_CONNECT				0x0406U /*	*/
//#define			PLC_SYS_ENABLE						0x0407U /*系统使能*/
#define			PLC_STOP_MOVE							0x0408U /**/
#define			PLC_MIDDLE_RDY						0x0409U	/*中位已设定*/
//#define     PLC_POWER_THRES_ERR	    0x040AU  /* 功率板测温电路异常电阻*/
//#define 		PLC_CUT_VOLTAGE_ERR	  		0x040BU	/* 电池电压轻度过低（性能消减）*/
//#define 		PLC_MIN_VOLTAGE_ERR			  0x040CU	/* 电池电压严重过低（停机）*/
#define 		PLC_MAX_VOLTAGE_ERR			  0x040DU	/* 电池电压过高*/
//#define 		PLC_POWER_CUT_TMP_ERR		  0x040EU	/* 功率板轻度过温（85度性能消减）*/
//#define 		PLC_POWER_MAX_TMP_ERR		  0x040FU	/* 功率板严重过温（95度停机）*/

//#define			PLC_POWER_MIN_TMP_ERR			0x0500U	/* 功率板低温（-25度）*/
//#define			PLC_MOTOR_CUT_TMP_ERR		  0x0501U /* 电机轻度高温*/
//#define			PLC_MOTOR_MAX_TMP_ERR		  0x0502U /* 电机严重高温*/
//#define			PLC_CAP_CHARGE_ERR				0x0503U /* 母线电容充电*/
//#define			PLC_OUT_5V_ERR						0x0504U /* 输出5V故障*/
//#define			PLC_OUT_12V_ERR						0x0505U /* 输出12V故障*/
//#define			PLC_MAIN_CONNECT_ERR	  	0x0506U /* 主接触器连接故障*/
//#define			PLC_DRIVE2_CONNECT_ERR		0x0507U	/* 电磁制动连接故障*/
//#define			PLC_DRIVE3_CONNECT_ERR		0x0508U /* 驱动3连接故障*/
//#define			PLC_DRIVE4_CONNECT_ERR		0x0509U /* 驱动4连接故障*/
//#define			PLC_MAIN_WELDED_ERR				0x050AU /* 主接触器触点熔接*/
//#define			PLC_MAIN_DRIVE_ERR				0x050BU /* 主接触器驱动故障*/
//#define     ICAN_MACIDCHECK_ERR				0x050CU	/* MACID检测失败*/
//#define     ICAN_CONNECT_ERR					0x050DU	/* ICAN连接失败*/										
//#define     PLC_IOLOGIC_ERR					  0x050EU	/* io POWER ON LOGIC ERRROR*/										
//#define     PLC_POT_SHORTCIRCUITS_ERR	0x050FU  /*电位计短路*/

///*******************************************************************************
//* 3. Kernel
//*******************************************************************************/
//#define 		SL_POSCMD_OV 						0x0600U	/* 位置控制模式时指令溢出 */
//#define 		SL_SPDCMD_OV						0x0601U	/* 速度控制模式时指令溢出 */
//#define 		SL_TORCMD_OV	 					0x0602U	/* 转矩控制模式时指令溢出 */
//#define 		SL_ASR_SATURATED 				0x0603U /* 速度环积分饱和 */
//#define 		SL_POWER_RDY 						0x0604U	/* 电源板ready */
//#define 		SL_KERNEL_ERR 					0x0605U /* Kernel运行错误 */
//#define 		SL_RE_POWER_ON 					0x0606U	/* 须重新开机 */
//#define 		SL_TER_SRDY							0x0607U	
//#define 		SL_TER_DALM_N						0x0608U	/* 错误检测 */
//#define 		SL_TER_COIN_N						0x0609U
//#define 		SL_TER_BRK_N						0x060AU
//										/*	0x060BU */
//										/*	0x060CU */
//										/*	0x060DU */
//										/*	0x060EU */
#define 		SL_PHASELOST_ERR				0x060FU	/*	0x060FU */
//#define 		SL_APR_RUN							0x0700U
//#define 		SL_ASR_RUN							0x0701U
//#define 		SL_ACR_RUN							0x0702U
//#define			SL_TU1_ALM							0x0703U 
#define 		SL_ERR_TIP_LOG					0x0704U
//#define 		SL_ERR_TIP_VISIB				0x0705U
//#define 		SL_ALM_TIP_VISIB				0x0706U
//#define 		SL_PARA_MODIFIED				0x0707U	/* 参数已被修改 */
//#define 		SL_OVER_LOAD_ERR				0x0708U	
//#define 		SL_ENCODER_UVW_ERR			0x0709U
//#define 		SL_ENCODER_DIR_ERR			0x070AU
//#define 		SL_ENCODER_COMM_ERR			0x070BU
#define 		PLC_EEPROM_RW_ERR				0x070CU	/* EEPROM读写参数错误*/
#define 		SL_EEPROM_BACK_ERR			0x070DU
#define 		PLC_PARA_OV_INDEX_ERR		0x070EU /* 参数编号错误*/
#define 		PLC_PARA_OV_LIMIT_ERR		0x070FU /* 参数超限错误*/
///*******************************************************************************
//* 4. HMI
//*******************************************************************************/
//										/*	0x0800U */
//										/*	0x0801U */
//										/*	0x0802U */
//										/*	0x0803U */
//										/*	0x0804U */
//										/*	0x0805U */
//										/*	0x0806U */
//#define 		SL_SAVE_MODIFIED_PARA				0x0807U	/* 保存修改的参数 */
//#define 		SL_SAVE_RIGID_RELATED_PARA	0x0808U	/* 刚性变更引起参数变化 */
//#define 		SL_SAVE_MOTOR_RELATED_PARA	0x0809U	/* 电机变更引起参数变化 */
//										/*	0x080AU */
//										/*	0x080BU */
//										/*	0x080CU */
//										/*	0x080DU */
//										/*	0x080EU */
//										/*	0x080FU */
///*******************************************************************************
//* 5. other
//*******************************************************************************/
//										/*	0x0900U */
//										/*	0x0901U */
//										/*	0x0902U */
//										/*	0x0903U */
//										/*	0x0904U */
//										/*	0x0905U */
//#define			SL_LOGIC_BUSY					0x0906U 	//PLC逻辑处理忙
//										/*	0x0907U */		
//										/*	0x0908U */
//										/*	0x0909U */
//										/*	0x090AU */
//										/*	0x090BU */
//										/*	0x090CU */
//										/*	0x090DU */
//#define			SL_INP_TUNE_INERTIA			0x090EU
//#define			SL_INP_TUNE_CALIBZ			0x090FU

/*******************************************************************************
* Signal lamp operation macro
*******************************************************************************/

#define SL_SET(sl)		(gCRam.SigLamp[sl >> 8] |= (  1U << (sl & 0x00FFU) ))
#define SL_CLR(sl)		(gCRam.SigLamp[sl >> 8] &= (~(1U << (sl & 0x00FFU))))
#define SL_CHK(sl)		(gCRam.SigLamp[sl >> 8] &  (  1U << (sl & 0x00FFU) ))

#define TER_IN_FROM_POWER_BOARD		0
#define TER_IN_FROM_NC						1
#define TER_OUT_TO_POWER_BOARD		2
#define TER_OUT_TO_NC							3

#define IS_LOGIC_MASTER(TYPE)  ((TYPE)==Prd_Move) 

#define IS_LOGIC_SLAVE(TYPE)   ((TYPE)==Prd_Lift || \
															 (TYPE)==Prd_Steer || \
														   (TYPE)==Prd_Move_Second || \
															 (TYPE)==Prd_Logic || \
															 (TYPE)==Prd_HMI || \
															 (TYPE)==Prd_PC ) 

/*******************************************************************************
* 结构体定义
*******************************************************************************/

extern		VINT16S			gRunTicks;
extern		VINT16S			gTimer[SYS_TIMER_NUM];
extern		INT16U			gCpuLoad;
/*******************************************************************************
* 函数定义
*******************************************************************************/
extern void ControlISR(void);//
extern void LEDProcess(void);

#endif	//_KSDSYS_H_
