/*******************************************************************************
* Filename: Ifoc.c                                             	 		   *
*                                                                    		   *
* Description:											   			 		   *
* Author: kff                                                                  *
* Date: 100623														           *
* Revision:															 		   *
*																	 		   *
*******************************************************************************/

#include	"CommonRam.h"
#include	"Fdb.h"
#include	"ServoPara.h"
#include  "Ifoc.h"
#include  "Speed.h"
#include  "Current.h"


/*******************************************************************************
* Name: IfocInit
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void IfocInit(IFOC *p)
{
	p->CalcIm = IfocCalcIm;
	p->CalcSlip = IfocCalcSlip;
	p->Reset = IfocReset;

	//#define qK_EULER _IQ(1.0/(FS*ROTOR_TIME_CONSTANT))
	//p->qK_EULER = _IQdiv(_IQ(1.0/(FS*STD_T)),gCRam.SvPa.MotorPara.Trotor);
	p->qK_EULER = _IQdiv(_IQ((2.0)/(FS*STD_T)),gCRam.SvPa.MotorPara.Trotor);
	//#define K_RAD_PULSE _IQ((1.0)/(FS*ROTOR_TIME_CONSTANT))
	p->K_RAD_PULSE = _IQdiv(_IQ(1.0/(FS*STD_T)),gCRam.SvPa.MotorPara.Trotor);
	p->TorqueIqMax = 0;
	p->wRotFlx_SlipFreq = 0;

	p->IdFdb = 0;
	p->IqFdb = 0;
	p->SpeedFdb = 0;
	p->Im = 0;
	p->wIm = ((INT64S)gCRam.SvPa.MotorPara.DriveFlux) * _IQ(BASEFLUX_MIN_RATIO);
	p->FluxId = 0;
	p->hRotFlx_SlipTheta = 0;
}
/*******************************************************************************
* Name: IfocCalcIm
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void IfocCalcIm(IFOC *p)
{
}
/*******************************************************************************
* Name: IfocCalcSlip
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void IfocCalcSlip(IFOC *p)
{
}

/*******************************************************************************
* Name: IfocReset
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void IfocReset(IFOC *p)
{

}

/*******************************************************************************
* Name: VlimitPidInit
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void VlimitPidInit(struct VLIMIT_PID *p)
{
	p->Out = 0;
	p->Ref = 0;
	p->Fdb = 0;
	p->Err = 0;
	p->Kp = 0;
	p->Ki = 0;
	p->Kc = 0;
	p->Up = 0;
	p->Ui = 0;
	p->KpCoe = _IQ(1.0);
	p->OutMax = _IQ(+0.999);
	p->OutMin = _IQ(-0.999);
	p->OutPreSat = 0;
	p->SatErr = 0;
}
/*******************************************************************************
* Name: VlimitPidCalc
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
void VlimitPidCalc(struct VLIMIT_PID *v)
{
}

/*******************************************************************************
* Function Name   : IFOC_CalcFluxTorqueRef
* Description     : This function provides current components Iqs* and Ids* to be
*                   used as reference values (by the IFOC_Model function) in 
*                   closed-loop speed mode
* Input           : None.
* Output          : None.
* Return          : None.
*******************************************************************************/
/*******************************************************************************
* Èõ´ÅÏµÊý±í
*
* ×¢ÊÍ1
*******************************************************************************/
//4Hz~300Hz, increase step (STD_FRQ/16)=0.266666667 Hz
//#define HFLUX_START_FRQ  _IQ(4.0/STD_FRQ)
//#define HFLUX_END_FRQ  _IQ(300.0/STD_FRQ)
const _iq  hflux_reference[1111]= 
{
	17895697,16777216,15790320,14913080,14128181,13421772,12782640,12201611,11671106,11184810,10737418,
	10324440,9942053,9586980,9256395,8947848,8659208,8388608,8134407,7895160,7669584,7456540,
	7255012,7064090,6882960,6710886,6547206,6391320,6242685,6100805,5965232,5835553,5711392,
	5592405,5478274,5368709,5263440,5162220,5064819,4971026,4880644,4793490,4709393,4628197,
	4549753,4473924,4400581,4329604,4260880,4194304,4129776,4067203,4006499,3947580,3890368,
	3834792,3780781,3728270,3677198,3627506,3579139,3532045,3486174,3441480,3397917,3355443,
	3314017,3273603,3234162,3195660,3158064,3121342,3085465,3050402,3016128,2982616,2949840,
	2917776,2886402,2855696,2825636,2796202,2767375,2739137,2711469,2684354,2657776,2631720,
	2606169,2581110,2556528,2532409,2508742,2485513,2462710,2440322,2418337,2396745,2375535,
	2354696,2334221,2314098,2294320,2274876,2255760,2236962,2218474,2200290,2182402,2164802,
	2147483,2130440,2113665,2097152,2080895,2064888,2049125,2033601,2018311,2003249,1988410,
	1973790,1959382,1945184,1931190,1917396,1903797,1890390,1877171,1864135,1851279,1838599,
	1826091,1813753,1801580,1789569,1777718,1766022,1754480,1743087,1731841,1720740,1709779,
	1698958,1688273,1677721,1667300,1657008,1646843,1636801,1626881,1617081,1607397,1597830,
	1588375,1579032,1569797,1560671,1551650,1542732,1533916,1525201,1516584,1508064,1499639,
	1491308,1483068,1474920,1466860,1458888,1451002,1443201,1435483,1427848,1420293,1412818,
	1405421,1398101,1390857,1383687,1376592,1369568,1362616,1355734,1348921,1342177,1335499,
	1328888,1322342,1315860,1309441,1303084,1296789,1290555,1284380,1278264,1272205,1266204,
	1260260,1254371,1248537,1242756,1237029,1231355,1225732,1220161,1214640,1209168,1203746,
	1198372,1193046,1187767,1182535,1177348,1172207,1167110,1162058,1157049,1152083,1147160,
	1142278,1137438,1132639,1127880,1123160,1118481,1113840,1109237,1104672,1100145,1095654,
	1091201,1086783,1082401,1078054,1073741,1069463,1065220,1061009,1056832,1052688,1048576,
	1044495,1040447,1036430,1032444,1028488,1024562,1020667,1016800,1012963,1009155,1005376,
	1001624,997901,994205,990536,986895,983280,979691,976128,972592,969081,965595,
	962134,958698,955286,951898,948535,945195,941878,938585,935315,932067,928842,
	925639,922458,919299,916161,913045,909950,906876,903823,900790,897777,894784,
	891812,888859,885925,883011,880116,877240,874382,871543,868723,865920,863136,
	860370,857621,854889,852176,849479,846799,844136,841490,838860,836247,833650,
	831069,828504,825955,823421,820903,818400,815913,813440,810983,808540,806112,
	803698,801299,798915,796544,794187,791845,789516,787200,784898,782610,780335,
	778073,775825,773589,771366,769156,766958,764773,762600,760440,758292,756156,
	754032,751920,749819,747731,745654,743588,741534,739491,737460,735439,733430,
	731431,729444,727467,725501,723545,721600,719666,717741,715827,713924,712030,
	710146,708272,706409,704555,702710,700875,699050,697234,695428,693631,691843,
	690065,688296,686535,684784,683041,681308,679583,677867,676159,674460,672770,
	671088,669415,667749,666092,664444,662803,661171,659546,657930,656321,654720,
	653127,651542,649964,648394,646832,645277,643730,642190,640657,639132,637613,
	636102,634599,633102,631612,630130,628654,627185,625723,624268,622820,621378,
	619943,618514,617093,615677,614268,612866,611470,610080,608697,607320,605949,
	604584,603225,601873,600526,599186,597851,596523,595200,593883,592572,591267,
	589968,588674,587386,586103,584826,583555,582289,581029,579774,578524,577280,
	576041,574808,573580,572357,571139,569926,568719,567516,566319,565127,563940,
	562757,561580,560408,559240,558077,556920,555766,554618,553475,552336,551202,
	550072,548947,547827,546711,545600,544493,543391,542293,541200,540111,539027,
	537946,536870,535799,534731,533668,532610,531555,530504,529458,528416,527378,
	526344,525314,524288,523265,522247,521233,520223,519217,518215,517216,516222,
	515231,514244,513260,512281,511305,510333,509365,508400,507439,506481,505528,
	504577,503631,502688,501748,500812,499879,498950,498024,497102,496183,495268,
	494356,493447,492542,491640,490741,489845,488953,488064,487178,486296,485416,
	484540,483667,482797,481930,481067,480206,479349,478494,477643,476794,475949,
	475107,474267,473431,472597,471767,470939,470114,469292,468473,467657,466844,
	466033,465226,464421,463619,462819,462023,461229,460438,459649,458864,458080,
	457300,456522,455747,454975,454205,453438,452673,451911,451152,450395,449640,
	448888,448139,447392,446648,445906,445166,444429,443694,442962,442233,441505,
	440780,440058,439337,438620,437904,437191,436480,435771,435065,434361,433659,
	432960,432263,431568,430875,430185,429496,428810,428126,427444,426765,426088,
	425412,424739,424068,423399,422733,422068,421405,420745,420086,419430,418776,
	418123,417473,416825,416179,415534,414892,414252,413613,412977,412343,411710,
	411080,410451,409825,409200,408577,407956,407337,406720,406105,405491,404880,
	404270,403662,403056,402451,401849,401248,400649,400052,399457,398863,398272,
	397682,397093,396507,395922,395339,394758,394178,393600,393024,392449,391876,
	391305,390735,390167,389601,389036,388473,387912,387352,386794,386238,385683,
	385129,384578,384027,383479,382932,382386,381842,381300,380759,380220,379682,
	379146,378611,378078,377546,377016,376487,375960,375434,374909,374386,373865,
	373345,372827,372309,371794,371280,370767,370255,369745,369237,368730,368224,
	367719,367216,366715,366214,365715,365218,364722,364227,363733,363241,362750,
	362261,361772,361285,360800,360316,359833,359351,358870,358391,357913,357437,
	356962,356487,356015,355543,355073,354604,354136,353669,353204,352740,352277,
	351815,351355,350896,350437,349981,349525,349070,348617,348165,347714,347264,
	346815,346368,345921,345476,345032,344589,344148,343707,343267,342829,342392,
	341955,341520,341086,340654,340222,339791,339362,338933,338506,338079,337654,
	337230,336807,336385,335964,335544,335125,334707,334290,333874,333460,333046,
	332633,332222,331811,331401,330993,330585,330178,329773,329368,328965,328562,
	328160,327760,327360,326961,326563,326167,325771,325376,324982,324589,324197,
	323806,323416,323027,322638,322251,321865,321479,321095,320711,320328,319946,
	319566,319186,318806,318428,318051,317675,317299,316924,316551,316178,315806,
	315435,315065,314695,314327,313959,313592,313226,312861,312497,312134,311771,
	311410,311049,310689,310330,309971,309614,309257,308901,308546,308192,307838,
	307486,307134,306783,306433,306083,305735,305387,305040,304694,304348,304003,
	303660,303316,302974,302632,302292,301952,301612,301274,300936,300599,300263,
	299927,299593,299259,298925,298593,298261,297930,297600,297270,296941,296613,
	296286,295959,295633,295308,294984,294660,294337,294014,293693,293372,293051,
	292732,292413,292095,291777,291460,291144,290829,290514,290200,289887,289574,
	289262,288950,288640,288330,288020,287712,287404,287096,286790,286483,286178,
	285873,285569,285266,284963,284661,284359,284058,283758,283458,283159,282861,
	282563,282266,281970,281674,281378,281084,280790,280496,280204,279911,279620,
	279329,279038,278749,278460,278171,277883,277596,277309,277023,276737,276452,
	276168,275884,275601,275318,275036,274754,274473,274193,273913,273634,273355,
	273077,272800,272523,272246,271971,271695,271421,271146,270873,270600,270327,
	270055,269784,269513,269243,268973,268704,268435,268167,267899,267632,267365,
	267099,266834,266569,266305,266041,265777,265514,265252,264990,264729,264468,
	264208,263948,263689,263430,263172,262914,262657,262400,262143,261888,261632,
	261378,261123,260870,260616,260364,260111,259860,259608,259357,259107,258857,
	258608,258359,258111,257863,257615,257368,257122,256876,256630,256385,256140,
	255896,255652,255409,255166,254924,254682,254441,254200,253959,253719,253480,
	253240,253002,252764,252526,252288,252052,251815,251579,251344,251108,250874,
	250640,250406,250172,249939,249707,249475,249243,249012,248781,248551,248321,
	248091,247862,247634,247405,247178,246950,246723,246497,246271,246045,245820,
	245595,245370,245146,244922,244699,244476,244254,244032,243810,243589,243368,
	243148,242928,242708,242489,242270,242051,241833,241616,241398,241181,240965,
	240749,240533,240318,240103,239888,239674,239460,239247,239034,238821,238609
};
/*******************************************************************************
* Èõ´ÅÌõ¼þÏÂiq×î´óÏÞ¶¨ÏµÊý
*
* ×¢ÊÍ1
*******************************************************************************/
const _iq  htorque_reference[1111]= 
{
	17895697,16777216,15790320,14913080,14128181,13421772,12782640,12201611,11671106,11184810,10737418,
	10324440,9942053,9586980,9256395,8947848,8659208,8388608,8134407,7895160,7669584,
	7456540,7255012,7064090,6882960,6710886,6547206,6391320,6242685,6100805,5965232,
	5835553,5711392,5592405,5478274,5368709,5263440,5162220,5064819,4971026,4880644,
	4793490,4709393,4628197,4549753,4473924,4400581,4329604,4260880,4194304,4129776,
	4067203,4006499,3947580,3890368,3834792,3780781,3728270,3677198,3627506,3579139,
	3532045,3486174,3441480,3397917,3355443,3314017,3273603,3234162,3195660,3158064,
	3121342,3085465,3050402,3016128,2982616,2949840,2917776,2886402,2855696,2825636,
	2796202,2767375,2739137,2711469,2684354,2657776,2631720,2606169,2581110,2556528,
	2532409,2508742,2485513,2462710,2440322,2418337,2396745,2375535,2354696,2334221,
	2314098,2294320,2274876,2255760,2236962,2218474,2200290,2182402,2164802,2147483,
	2130440,2113665,2097152,2080895,2064888,2049125,2033601,2018311,2003249,1988410,
	1973790,1959382,1945184,1931190,1917396,1903797,1890390,1877171,1864135,1851279,
	1838599,1826091,1813753,1801580,1789569,1777718,1766022,1754480,1743087,1731841,
	1720740,1709779,1698958,1688273,1677721,1667300,1657008,1646843,1636801,1626881,
	1617081,1607397,1597830,1588375,1579032,1569797,1560671,1551650,1542732,1533916,
	1525201,1516584,1508064,1499639,1491308,1483068,1474920,1466860,1458888,1451002,
	1443201,1435483,1427848,1420293,1412818,1405421,1398101,1390857,1383687,1376592,
	1369568,1362616,1355734,1348921,1342177,1335499,1328888,1322342,1315860,1309441,
	1303084,1296789,1290555,1284380,1278264,1272205,1266204,1260260,1254371,1248537,
	1242756,1237029,1231355,1225732,1220161,1214640,1209168,1203746,1198372,1193046,
	1187767,1182535,1177348,1172207,1167110,1162058,1157049,1152083,1147160,1142278,
	1137438,1132639,1127880,1123160,1118481,1113840,1109237,1104672,1100145,1095654,
	1091201,1086783,1082401,1078054,1073741,1069463,1065220,1061009,1056832,1052688,
	1048576,1044495,1040447,1036430,1032444,1028488,1024562,1020667,1016800,1012963,
	1009155,1005376,1001624,997901,994205,990536,986895,983280,979691,976128,
	972592,969081,965595,962134,958698,955286,951898,948535,945195,941878,
	938585,935315,932067,928842,925639,922458,919299,916161,913045,909950,
	906876,903823,900790,897777,894784,891812,888859,885925,883011,880116,
	877240,874382,871543,868723,865920,863136,860370,857621,854889,852176,
	849479,846799,844136,841490,838860,836247,833650,831069,828504,825955,
	823421,820903,818400,815913,813440,810983,808540,806112,803698,801299,
	798915,796544,794187,791845,789516,787200,784898,782610,780335,778073,
	775825,773589,771366,769156,766958,764773,762600,760440,758292,756156,
	754032,751920,749819,747731,745654,743588,741534,739491,737460,735439,
	733430,731431,729444,727467,725501,723545,721600,719666,717741,715827,
	713924,712030,710146,708272,706409,704555,702710,700875,699050,697234,
	695428,693631,691843,690065,688296,686535,684784,683041,681308,679583,
	677867,676159,674460,672770,671088,669415,667749,666092,664444,662803,
	661171,659546,657930,656321,654720,653127,651542,649964,648394,646832,
	645277,643730,642190,640657,639132,637613,636102,634599,633102,631612,
	630130,628654,627185,625723,624268,622820,621378,619943,618514,617093,
	615677,614268,612866,611470,610080,608697,607320,605949,604584,603225,
	601873,600526,599186,597851,596523,595200,593883,592572,591267,589968,
	588674,587386,586103,584826,583555,582289,581029,579774,578524,577280,
	576041,574808,573580,572357,571139,569926,568719,567516,566319,565127,
	563940,562757,561580,560408,559240,558077,556920,555766,554618,553475,
	552336,551202,550072,548947,547827,546711,545600,544493,543391,542293,
	541200,540111,539027,537946,536870,535799,534731,533668,532610,531555,
	530504,529458,528416,527378,526344,525314,524288,523265,522247,521233,
	520223,519217,518215,517216,516222,515231,514244,513260,512281,511305,
	510333,509365,508400,507439,506481,505528,504577,503631,502688,501748,
	500812,499879,498950,498024,497102,496183,495268,494356,493447,492542,
	491640,490741,489845,488953,488064,487178,486296,485416,484540,483667,
	482797,481930,481067,480206,479349,478494,477643,476794,475949,475107,
	474267,473431,472597,471767,470939,470114,469292,468473,467657,466844,
	466033,465226,464421,463619,462819,462023,461229,460438,459649,458864,
	458080,457300,456522,455747,454975,454205,453438,452673,451911,451152,
	450395,449640,448888,448139,447392,446648,445906,445166,444429,443694,
	442962,442233,441505,440780,440058,439337,438620,437904,437191,436480,
	435771,435065,434361,433659,432960,432263,431568,430875,430185,429496,
	428810,428126,427444,426765,426088,425412,424739,424068,423399,422733,
	422068,421405,420745,420086,419430,418776,418123,417473,416825,416179,
	415534,414892,414252,413613,412977,412343,411710,411080,410451,409825,
	409200,408577,407956,407337,406720,406105,405491,404880,404270,403662,
	403056,402451,401849,401248,400649,400052,399457,398863,398272,397682,
	397093,396507,395922,395339,394758,394178,393600,393024,392449,391876,
	391305,390735,390167,389601,389036,388473,387912,387352,386794,386238,
	385683,385129,384578,384027,383479,382932,382386,381842,381300,380759,
	380220,379682,379146,378611,378078,377546,377016,376487,375960,375434,
	374909,374386,373865,373345,372827,372309,371794,371280,370767,370255,
	369745,369237,368730,368224,367719,367216,366715,366214,365715,365218,
	364722,364227,363733,363241,362750,362261,361772,361285,360800,360316,
	359833,359351,358870,358391,357913,357437,356962,356487,356015,355543,
	355073,354604,354136,353669,353204,352740,352277,351815,351355,350896,
	350437,349981,349525,349070,348617,348165,347714,347264,346815,346368,
	345921,345476,345032,344589,344148,343707,343267,342829,342392,341955,
	341520,341086,340654,340222,339791,339362,338933,338506,338079,337654,
	337230,336807,336385,335964,335544,335125,334707,334290,333874,333460,
	333046,332633,332222,331811,331401,330993,330585,330178,329773,329368,
	328965,328562,328160,327760,327360,326961,326563,326167,325771,325376,
	324982,324589,324197,323806,323416,323027,322638,322251,321865,321479,
	321095,320711,320328,319946,319566,319186,318806,318428,318051,317675,
	317299,316924,316551,316178,315806,315435,315065,314695,314327,313959,
	313592,313226,312861,312497,312134,311771,311410,311049,310689,310330,
	309971,309614,309257,308901,308546,308192,307838,307486,307134,306783,
	306433,306083,305735,305387,305040,304694,304348,304003,303660,303316,
	302974,302632,302292,301952,301612,301274,300936,300599,300263,299927,
	299593,299259,298925,298593,298261,297930,297600,297270,296941,296613,
	296286,295959,295633,295308,294984,294660,294337,294014,293693,293372,
	293051,292732,292413,292095,291777,291460,291144,290829,290514,290200,
	289887,289574,289262,288950,288640,288330,288020,287712,287404,287096,
	286790,286483,286178,285873,285569,285266,284963,284661,284359,284058,
	283758,283458,283159,282861,282563,282266,281970,281674,281378,281084,
	280790,280496,280204,279911,279620,279329,279038,278749,278460,278171,
	277883,277596,277309,277023,276737,276452,276168,275884,275601,275318,
	275036,274754,274473,274193,273913,273634,273355,273077,272800,272523,
	272246,271971,271695,271421,271146,270873,270600,270327,270055,269784,
	269513,269243,268973,268704,268435,268167,267899,267632,267365,267099,
	266834,266569,266305,266041,265777,265514,265252,264990,264729,264468,
	264208,263948,263689,263430,263172,262914,262657,262400,262143,261888,
	261632,261378,261123,260870,260616,260364,260111,259860,259608,259357,
	259107,258857,258608,258359,258111,257863,257615,257368,257122,256876,
	256630,256385,256140,255896,255652,255409,255166,254924,254682,254441,
	254200,253959,253719,253480,253240,253002,252764,252526,252288,252052,
	251815,251579,251344,251108,250874,250640,250406,250172,249939,249707,
	249475,249243,249012,248781,248551,248321,248091,247862,247634,247405,
	247178,246950,246723,246497,246271,246045,245820,245595,245370,245146,
	244922,244699,244476,244254,244032,243810,243589,243368,243148,242928,
	242708,242489,242270,242051,241833,241616,241398,241181,240965,240749,
	240533,240318,240103,239888,239674,239460,239247,239034,238821,238609
};
//called by speedloop
void IfocCalcFluxRefTorqueLimit(struct SPEED_WEAK_FLUX *p)
{
}
void WeakFluxInit(struct SPEED_WEAK_FLUX *p)
{
	//#define K_RAD_HZ   _IQ((1.0/(STD_FRQ))/(ROTOR_TIME_CONSTANT))
	p->K_RAD_HZ = _IQdiv(_IQ(1.0/(STD_FRQ*STD_T)),gCRam.SvPa.MotorPara.Trotor);
	p->Calc = IfocCalcFluxRefTorqueLimit;
	p->BaseFlux = gCRam.SvPa.MotorPara.DriveFlux;
	p->FluxRefIn = p->BaseFlux;
	p->FluxRef = p->BaseFlux;
	p->IqCmdOut = 0;
	p->IqCmdIn = 0;
	p->IqSum = ((INT64S)_IQmpy(p->BaseFlux,_IQ(BASEFLUX_MIN_RATIO))) << IQSUM_SHIFT;
	p->IqEverage = p->IqSum >> IQSUM_SHIFT;
	p->State = 0;
	p->SlipFreq = 0;

	p->VoltageBus = 0;
	p->PID.Init = VlimitPidInit;
	p->PID.Calc = VlimitPidCalc;
	p->PID.Init(&p->PID);
}


/*******************************************************************************
* Name: SvGenDqCalc1
* Description:
* Input: 
* Output: 
*
* Author:
* Date: 
* Revision:
*******************************************************************************/
/****************
  Limit 1.0~(1.0 + 64/256 + 64/128) to 1.0
******************/
const INT16U hexagon_limit_table[129]= {
	0,
	65280,65027,64776,64527,64280,64035,63791,63550,
	63310,63072,62836,62601,62368,62137,61908,61680,
	61455,61230,61008,60787,60567,60349,60133,59918,
	59705,59493,59283,59074,58867,58661,58457,58254,
	58052,57852,57653,57456,57260,57065,56871,56679,
	56488,56299,56111,55924,55738,55553,55370,55188,
	55007,54827,54648,54471,54295,54120,53946,53773,
	53601,53430,53261,53092,52924,52758,52593,52428,
	52103,51781,51463,51150,50840,50533,50231,49932,
	49636,49344,49056,48770,48489,48210,47934,47662,
	47393,47127,46863,46603,46345,46091,45839,45590,
	45343,45100,44858,44620,44384,44150,43919,43690,
	43464,43240,43018,42799,42581,42366,42153,41943,
	41734,41527,41323,41120,40920,40721,40524,40329,
	40136,39945,39756,39568,39383,39199,39016,38836,
	38657,38479,38304,38130,37957,37786,37617,37449,
};    
	
void SvGenDqCalc1(SVGENDQ *v)
{
}
