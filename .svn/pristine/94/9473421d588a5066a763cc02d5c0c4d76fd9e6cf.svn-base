/******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
* File Name          : MC_MotorControl_Layer.h
* Author             : IMS Systems Lab
* Date First Issued  : 21/11/07
* Description        : Export of public functions of Motor control layer 
********************************************************************************
* History:
* 21/11/07 v1.0
* 29/05/08 v2.0
********************************************************************************
* THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
* AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
* INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
* CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
* INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
*
* THIS SOURCE CODE IS PROTECTED BY A LICENSE.
* FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
* IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
*******************************************************************************/

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __MC_MOTORCONTROLLAYER_H
#define __MC_MOTORCONTROLLAYER_H

/* Includes ------------------------------------------------------------------*/
#include "MC_type.h"
#include "KSDsys.h"
#include "Device.h"
#include "FDB.h"

/* Exported types ------------------------------------------------------------*/
#define PWM_MOD 		PWM_PERIOD	//
#define MAX_PWM   	(PWM_MOD*94/100)	//96% PWM_MOD

#if (RATE_VOLTAGE == 48)
#define MAX80_PWM		(PWM_MOD*40/100)	//60% PWM_MOD
#define SHORTCHECK_PWM		(PWM_MOD*16/100)	//(0.20om*20A=4.0V; 4.0/24=16%)
#endif

#if (RATE_VOLTAGE == 24)
#define MAX80_PWM		(PWM_MOD*80/100)	//60% PWM_MOD
#define SHORTCHECK_PWM		(PWM_MOD*16/100)	//(0.20om*20A=4.0V; 4.0/24=16%)
#endif

/* Exported constants --------------------------------------------------------*/

#define FAULT_STATE_MIN_PERMANENCY 600 //0.5msec unit

#define BUS_AV_ARRAY_SIZE  (u8)32  //number of averaged acquisitions
#define T_AV_ARRAY_SIZE  (u16)2048  //number of averaged acquisitions

#define BUSV_CONVERSION (u16) (3.32/(BUS_ADC_CONV_RATIO)) 
#define TEMP_CONVERSION (u8)  195

#define VOLT_ARRAY_INIT (u16)(UNDERVOLTAGE_THRESHOLD+ OVERVOLTAGE_THRESHOLD)/2
#define TEMP_ARRAY_INIT (u16)0

#define NTC_THRESHOLD (u16) ((4096*(NTC_THRESHOLD_C - 14))/TEMP_CONVERSION)
#define NTC_HYSTERIS  (u16) ((4096*(NTC_THRESHOLD_C - NTC_HYSTERIS_C - 14))\
                                                               /TEMP_CONVERSION)

//Not to be modified
#define OVERVOLTAGE_THRESHOLD  (u16)(OVERVOLTAGE_THRESHOLD_V*\
                                                 (BUS_ADC_CONV_RATIO*4096/3.3))
#define UNDERVOLTAGE_THRESHOLD (u16)(UNDERVOLTAGE_THRESHOLD_V*\
                                                 (BUS_ADC_CONV_RATIO*4096/3.3))
#define VOLTAGELIMIT_THRESHOLD (u16)(VOLTAGELIMIT_THRESHOLD_V*\
                                                 (BUS_ADC_CONV_RATIO*4096/3.3))																								 
#define ESPVOLTAGE_THRESHOLD  (u16)((OVERVOLTAGE_THRESHOLD_V+1)*\
                                                 (BUS_ADC_CONV_RATIO*4096/3.3))																										 
#define RELAYON_THRESHOLD 		 (u16)(RELAYON_THRESHOLD_V*\
                                                 (BUS_ADC_CONV_RATIO*4096/3.3))					
#define POWER5V_THRESHOLD 		 (u16)(POWER5V_THRESHOLD_V*\
                                                 (POWER5V_CONV_RATIO*4096/3.3))	
#define PVDVOLTAGE_THRESHOLD 	 (u16)(15*(BUS_ADC_CONV_RATIO*4096/3.3))


#define CMDPOSVOLTMIN  		0    //位置传感器最小电压0.3V
#define CMDPOSVOLTMAX  		54   //位置传感器最大电压5.4V

#define BOARD_OVERTMP_THRESHOLD		 95			
#define BOARDTMP_ALM_THRESHOLD		 80		
#define BOARD_LOWTMP_THRESHOLD		 -25	

#define HOME_STALLTIME  (2000/SYS_PERIOD)
#define HOME_STALLCNT   2
#define HOME_ERROR  	  40
#define HOME_TIMECNT  	(20/SYS_PERIOD)
#define SPEEDLOST_CNT  	(500/SYS_PERIOD)
/*----------------------------------------------------------------------------
*
----------------------------------------------------------------------------*/
// #define GetAdFromI(I)	((long)I*4096/41250)
// #define GetIFromAd(ad)	((long)ad*41250/4096)		3300/2/40mV=41.25A																						 
/* Exported variables --------------------------------------------------------*/

extern u16 h_ADCBusvolt;
extern u16 h_ADCTemp;

/* Exported macro ------------------------------------------------------------*/
/* Exported functions ------------------------------------------------------- */

void MCL_Init(void);
void MCL_ChkPowerStatue(void);
void MCL_ClearFault(u16 hFault_type);
//void MCL_SetFault(u16 hFault_type);
BusV_t MCL_Chk_BusVolt(void);
u16	 MCL_Compute_BusVolt(void);
u8 	 MCL_Compute_Temp(void);
void MCL_Calc_BusVolt(void);
s16  MCL_Get_BusVolt(void);
void MCL_Init_Arrays(void);
void PWM_Out(void);
void ChangeModScs(INT16U nMod,INT16U nScs);
void GetNewTargetValue(void);

void	InitPLCCtl(void);	//电机控制初始化程序
extern void	TIM1ms_ISR(void);  //1ms中断服务函数
void  ControllerISR(void);
void  TIM100usISR(void); //100us中断服务函数
int   myvpid(long lSetSpeed,long lMeaSpeed);
void Homing(void);
void Protection(void);

INT32S  _GetSetPosition( void);
INT32S  _GetSetDegree(INT32S SetPosition);
void  GetCmdPercent(void );

#endif //__MC_MOTORCONTROLLAYER_H
/******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
